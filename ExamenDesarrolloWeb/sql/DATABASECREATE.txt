CREATE DATABASE TiendaRJ;
USE TiendaRJ;

-- Tabla de Clientes
CREATE TABLE Clientes (
    id_cliente INT IDENTITY PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    direccion VARCHAR(255) NOT NULL,
    telefono VARCHAR(20),
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL, 
    fecha_registro DATETIME DEFAULT GETDATE()
);

-- Tabla de Relojes
CREATE TABLE Relojes (
    id_reloj INT IDENTITY PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    descripcion TEXT,
    precio DECIMAL(10, 2) NOT NULL,
    stock INT NOT NULL,
    imagen_url VARCHAR(255)
);

-- Tabla de Ordenes
CREATE TABLE Ordenes (
    id_orden INT IDENTITY PRIMARY KEY,
    id_cliente INT,
    fecha_orden DATETIME DEFAULT GETDATE(),
    total DECIMAL(10, 2) NOT NULL,
    estado VARCHAR(20) DEFAULT 'pendiente', -- Pendiente, Pagado, Enviado, Entregado, Cancelado
    FOREIGN KEY (id_cliente) REFERENCES Clientes(id_cliente)
);

-- Tabla de Detalles de Orden
CREATE TABLE DetallesOrden (
    id_detalle_orden INT IDENTITY PRIMARY KEY,
    id_orden INT,
    id_reloj INT,
    cantidad INT NOT NULL,
    precio_unitario DECIMAL(10, 2) NOT NULL,
    subtotal AS (cantidad * precio_unitario) PERSISTED, -- Calculado automáticamente
    FOREIGN KEY (id_orden) REFERENCES Ordenes(id_orden),
    FOREIGN KEY (id_reloj) REFERENCES Relojes(id_reloj)
);

-- Tabla de Pagos
CREATE TABLE Pagos (
    id_pago INT IDENTITY PRIMARY KEY,
    id_orden INT,
    fecha_pago DATETIME DEFAULT GETDATE(),
    monto DECIMAL(10, 2) NOT NULL,
    metodo_pago VARCHAR(20) NOT NULL, -- Tarjeta, PayPal, Transferencia
    estado VARCHAR(20) DEFAULT 'pendiente', -- Pendiente, Completado, Fallido
    FOREIGN KEY (id_orden) REFERENCES Ordenes(id_orden)
);

